(()=>{"use strict";var t={d:(n,e)=>{for(var c in e)t.o(e,c)&&!t.o(n,c)&&Object.defineProperty(n,c,{enumerable:!0,get:e[c]})}};t.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(t){if("object"==typeof window)return window}}(),t.o=(t,n)=>Object.prototype.hasOwnProperty.call(t,n),(()=>{var n;t.g.importScripts&&(n=t.g.location+"");var e=t.g.document;if(!n&&e&&(e.currentScript&&(n=e.currentScript.src),!n)){var c=e.getElementsByTagName("script");c.length&&(n=c[c.length-1].src)}if(!n)throw new Error("Automatic publicPath is not supported in this browser");n=n.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),t.p=n})(),t.d({},{VC:()=>f,VN:()=>h,JQ:()=>u,Sw:()=>l,ff:()=>y,_n:()=>s,h2:()=>m,mV:()=>v});const n=t.p+"da204f5fcb98644e66bd.jpg",e=()=>{s.innerHTML=' <div class="d-flex justify-content-center align-items-center h-100">\n  <div class="spinner-border" role="status">\n    <span class="visually-hidden">Loading...</span>\n  </div>\n</div>'},c=t=>{const e=`<h3 class="mb-5 pt-2 text-center fw-bold text-uppercase">Your products</h3> \n  <div id="cartContent"></div>\n  <hr class="my-4">\n  <h4 class="mb-3 pt-2 text-center fw-bold text-uppercase">Total: $${t.reduce(((t,n)=>t+n.price*n.amount),0)}</h4> \n  <div id="checkBtn" class="d-flex justify-content-center">\n    <button type="button" class="btn btn-success">Checkout</button>\n  </div>\n  `;if(t.length>0){u.innerHTML=e;const c=t.map((t=>{const e=document.createElement("div");e.classList.add("mb-4","d-flex","gap-3","justify-content-between","align-items-center");const c=`\n    <div >\n      <img\n        src="${t.url_image}"\n        onerror="this.onerror=null;this.src='${n}'" \n        class="rounded-2 mw-100"\n        alt="${t.name}"\n        width="80"\n      />\n    </div>\n    <div >\n      <p class="text-black  text-center" style="font-size:15px">${t.name}</p>\n    </div>\n    <div class=" d-flex justify-content-center">\n      <i class="bi bi-dash p-1" role="button" id="subBtn"></i>\n  \n      <p class="m-0 p-1">${t.amount}</p>\n  \n      <i class="bi bi-plus p-1" role="button" id="addBtn" ></i>\n    </div>\n    <div class="">\n      <h6 class="mb-0">$${t.amount*t.price}</h6>\n    </div>\n    \n      <i class="bi bi-x" id="removeBtn" role="button"></i>\n    \n  \n `;e.innerHTML=c;const r=e.querySelector("#removeBtn"),o=e.querySelector("#addBtn");return e.querySelector("#subBtn").addEventListener("click",(()=>{v(t)})),o.addEventListener("click",(()=>{f(t)})),r.addEventListener("click",(()=>{m(t)})),e})),r=u.querySelector("#checkBtn");c.forEach((t=>{u.querySelector("#cartContent").appendChild(t)})),r.addEventListener("click",(()=>{alert("Im not gonna implement this :D")}))}else u.innerHTML='<h5 class="mb-5 pt-2 text-center fw-bold">Add products to your cart</h5>'},r=(t,e)=>{const c=`\n  <div class="text-center container py-5 ">\n          <h4 class="mt-5 mb-5"><strong>${e}</strong></h4>\n        </div>\n        <div class="container">\n  <div class="row row-cols-1 row-cols-sm-2 row-cols-md-3  row-cols-lg-4" id="gallery">\n  \n</div>\n</div>`;s.innerHTML=c;const r=document.querySelector("#gallery"),o=(t=>t.map((t=>{const e=document.createElement("div");e.classList.add("col","my-3");const c=`\n            <div class="card p-2 h-100 d-flex flex-column justify-content-between">\n      <div class="h-75" >\n      <img class="card-img-top position-relative " src="${t.url_image}" onerror="this.onerror=null;this.src='${n}'" alt="Card image cap">\n      ${t.discount>0?'<span class="badge bg-danger ms-2 position-absolute top-10 start-0">-10%</span>':""}\n      </div>\n    <div class="card-body">\n      <h6 class="card-title text-center">${t.name}</h6>\n      <p class="card-text text-center"> $${t.price}</p>\n      <hr class="my-0" />\n      <div class="d-flex mt-3 mx-0">\n      <button type="button" class="btn btn-secondary flex-fill m-0" id="cardBtn">Buy now</button>\n      </div>\n\n    </div>\n  </div>`;return e.innerHTML=c,e.querySelector("#cardBtn").addEventListener("click",(()=>{h(t)})),e})))(t);o.forEach((t=>{r.appendChild(t)}))},o=()=>{s.innerHTML='<div class="d-flex align-items-center justify-content-center vh-100">\n  <div class="text-center">\n      <h1 class="display-1 fw-bold">404</h1>\n      <p class="fs-3"> <span class="text-danger">Opps!</span> Page not found.</p>\n      <p class="lead">\n          Something went wrong. Please try again\n        </p>\n      <div class="btn btn-primary" id="btn-err"> Refresh</div>\n  </div>\n</div>',document.querySelector("#btn-err").addEventListener("click",(()=>{window.location.reload()}))},s=document.querySelector("#main"),i=document.querySelector("#search-form"),a=document.querySelector("#search-input"),d=document.querySelector("#home-btn"),l=document.querySelector("#categories-drop"),u=document.querySelector("#canvas-body");let p=[];const h=t=>{const n={...t,amount:1};if(p.find((t=>t.id===n.id))){const t=p.findIndex((t=>t.id===n.id));p[t].amount++}else p=[...p,n];c(p)},m=t=>{p=p.filter((n=>n.id!==t.id)),c(p)},f=t=>{if(p.find((n=>n.id===t.id))){const n=p.findIndex((n=>n.id===t.id));p[n].amount++}c(p)},v=t=>{if(p.find((n=>n.id===t.id))){const n=p.findIndex((n=>n.id===t.id));p[n].amount--,0===p[n].amount&&(p=p.filter((n=>n.id!==t.id)))}c(p)},b=async()=>{e();try{const t=await fetch("http://localhost:5000/api/products");if(!t.ok)throw new Error("cant get products");const n=await t.json();console.log(n),r(n.products,"All products")}catch(t){o(),console.log(t)}},y=async(t,n)=>{e();try{const e=await fetch("http://localhost:5000/api/category/"+t);if(!e.ok)throw new Error("cant fetch category");const c=await e.json();r(c.products,`${n} category`)}catch(t){o(),console.log(t)}};b(),(async()=>{e();try{const t=await fetch("http://localhost:5000/api/category");if(!t.ok)throw new Error("cant get category");(t=>{console.log(t);const n=t.map((t=>`<li class="dropdown-item" role="button" id="${t.id}">${t.name}</li>`)).join("");l.innerHTML=n,[...l.children].forEach((t=>{t.addEventListener("click",(n=>{const{id:e,textContent:c}=t;y(e,c)}))}))})((await t.json()).categories)}catch(t){o(),console.log(t)}})(),i.addEventListener("submit",(t=>{t.preventDefault(),(async t=>{e();try{const n=await fetch("http://localhost:5000/api/products/search?"+new URLSearchParams({productName:t}));if(!n.ok)throw new Error("cant search product");const e=await n.json();r(e.products,`Results for "${t}"`)}catch(t){o(),console.log(t)}})(a.value),a.value=""})),d.addEventListener("click",b)})();